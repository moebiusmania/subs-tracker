import{d as m,r as x,g as w,o as _,c as y,w as c,v as g,h as e,i as p,j as k,a as C,k as v,l as b,m as u,u as A,b as D,n as S,s as V}from"./index-ChE0ZsZf.js";import{C as $}from"./Container-CMkWyB-O.js";import{f as q}from"./index-DHFkM5cF.js";const I=e("label",{for:"name",class:"label"},"Service name:",-1),M=e("label",{for:"price",class:"label"},"How much does it costs?",-1),B=["value"],N=e("label",{for:"currency",class:"label"},"Currency:",-1),U=e("option",{value:"€"},"€ Euro",-1),E=e("option",{value:"$"},"$ Dollar",-1),T=[U,E],j={class:"label cursor-pointer",for:"isactive"},F=e("span",null,"Is active?",-1),P=e("label",{for:"expiration",class:"label"},"Date of expiration:",-1),R=["value"],G=e("label",{for:"recurrence",class:"label"},"Recurs:",-1),H=e("option",{value:"monthly"},"Monthly",-1),Y=e("option",{value:"yearly"},"Yearly",-1),z=[H,Y],J={class:"mt-7 flex flex-col gap-5 md:flex-row md: justify-between"},K=e("button",{class:"btn btn-accent w-full md:w-1/2 lg:w-1/3"}," Add this subscription ",-1),L=m({__name:"Form",emits:["add-item"],setup(f,{emit:n}){const i=n,t=x({name:"",price:1,currency:"€",isActive:!0,expiration:new Date,recurrence:"monthly"}),r=a=>{const o=a.target.value,l={...t.value,price:parseFloat(o)};t.value=l},d=a=>{const o=a.target.value,l={...t.value,expiration:new Date(o)};t.value=l},h=a=>{a.preventDefault(),i("add-item",t.value)};return(a,o)=>{const l=w("router-link");return _(),y("form",{onSubmit:h},[I,c(e("input",{type:"text",placeholder:"ex: Netflix, Prime, etc..",class:"input w-full input-bordered",name:"name","onUpdate:modelValue":o[0]||(o[0]=s=>t.value.name=s),required:""},null,512),[[g,t.value.name]]),M,e("input",{type:"number",placeholder:"10.00",class:"input w-full input-bordered",min:"0.1",step:"0.1",value:t.value.price.toString(),onInput:r,name:"price",required:""},null,40,B),N,c(e("select",{class:"select select-bordered w-full",required:"",name:"currency","onUpdate:modelValue":o[1]||(o[1]=s=>t.value.currency=s),disabled:""},T,512),[[p,t.value.currency]]),e("label",j,[F,c(e("input",{type:"checkbox",class:"toggle",name:"isactive","onUpdate:modelValue":o[2]||(o[2]=s=>t.value.isActive=s)},null,512),[[k,t.value.isActive]])]),P,e("input",{type:"date",class:"input w-full input-bordered",required:"",name:"expiration",value:C(q)(t.value.expiration),onInput:d},null,40,R),G,c(e("select",{class:"select select-bordered w-full",required:"",name:"recurrence","onUpdate:modelValue":o[3]||(o[3]=s=>t.value.recurrence=s)},z,512),[[p,t.value.recurrence]]),e("div",J,[K,v(l,{to:"/",class:"btn w-full md:w-1/2 lg:w-1/3"},{default:b(()=>[u(" Go back to the main screen ")]),_:1})])],32)}}}),O={class:"bg-base-100 p-7 lg:p-8 mt-3"},Q=e("h2",{class:"font-sans text-2xl font-bold"},"Add a new subscription",-1),W=e("p",{class:"mt-2 font-light text-sm"},[u(" The subscription data will be "),e("strong",{class:"font-bold text-accent"},"stored locally"),u(". It will not be available on other device and there are no security or privacy concerns. ")],-1),X=e("div",{class:"divider"},null,-1),oe=m({__name:"Add",setup(f){const n=A(),i=S(),t=r=>{n.addSubscription(r),V(n.getState),i.push("/")};return(r,d)=>(_(),D($,null,{default:b(()=>[e("div",O,[Q,W,X,v(L,{onAddItem:t})])]),_:1}))}});export{oe as default};
